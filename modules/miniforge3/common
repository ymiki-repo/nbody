proc ModulesHelp { } {
	global module_name
	puts stderr "How to set environment:"
	puts stderr "    $ module load $module_name"
}

set module_name [module-info name]
regsub (/.*$) $module_name "" module
regsub (.*\/) $ModulesCurrentModulefile "" version
module-whatis "$module $version"

conflict $module

# load anyenv
if { ![is-loaded anyenv] } {
	module load anyenv
}
prereq anyenv
set path [file normalize [getenv PYENV_ROOT]/versions/$module-$version]

# confirmation
if { [module-info mode load] } {
	set ver_set [open [getenv PYENV_ROOT]/version]
	set def_ver [read $ver_set]
	close $ver_set
	set def_ver [string trimright $def_ver "\n"]
	if { [string equal $module-$version $def_ver] != 1 } {
		puts stderr "not loaded: module-version is $module-$version while default environment in pyenv is $def_ver"
		exit 1
	}
}

# set path
prepend-path	PATH	$path/condabin:$path/bin

# set environmental variables
setenv CONDA_EXE     $path/bin/conda
setenv CONDA_PYTHON_EXE     $path/bin/python
setenv CONDA_SHLVL     0

# set-function
switch -- [module-info shelltype] {
	{sh} {
		source $moduledir/common.bash
	}
	{bash} {
		source $moduledir/common.bash
	}
	{fish} {
        setenv CONDA_ROOT     $path
		source $moduledir/common.fish
	}
}
