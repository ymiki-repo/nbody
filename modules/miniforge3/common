proc ModulesHelp { } {
	global module_name
	puts stderr "How to set environment:"
	puts stderr "    $ module load $module_name"
}

set module_name [module-info name]
regsub (/.*$) $module_name "" module
regsub (.*\/) $ModulesCurrentModulefile "" version
module-whatis "$module $version"

conflict $module

# load anyenv
if { ![is-loaded anyenv] } {
	module load anyenv
}
prereq anyenv
set path [getenv PYENV_ROOT]/versions/$module-$version

# confirmation
if { [module-info mode load] } {
	set ver_set [open [getenv PYENV_ROOT]/version]
	set def_ver [read $ver_set]
	close $ver_set
	set def_ver [string trimright $def_ver "\n"]
	if { [string equal $module-$version $def_ver] != 1 } {
		puts stderr "not loaded: module-version is $module-$version while default environment in pyenv is $def_ver"
		exit 1
	}
}

# below is generated by $ module sh-to-mod bash $path/etc/profile.d/conda.sh
# also, unload/load modules is added
# below command is also available if module version is >= 4.6:
# source-sh bash $path/etc/profile.d/conda.sh

# set path
prepend-path	PATH	$path/condabin:$path/bin

# set function
set-function	__conda_activate {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        PS1="$CONDA_PS1_BACKUP";
        \unset CONDA_PS1_BACKUP;
    fi;
    \local ask_conda;
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return;
    \eval "$ask_conda";
    __conda_hashr}
set-function	__conda_exe {
    ( "$CONDA_EXE" $_CE_M $_CE_CONDA "$@" )}
set-function	__rehash_modules {
    list=(${LOADEDMODULES//:/ });
    THIS=$(<${PYENV_ROOT}/version);
    THIS=(${THIS//-//});
    normal=();
    inverse=();
    for target in "${list[@]}" ; do
		if [[ ${target} != anyenv ]] && [[ ${target} != ${THIS} ]]; then
			normal=("${normal[@]}" "${target}");
			inverse=("${target}" "${inverse[@]}");
		fi;
    done;
    for target in "${inverse[@]}" ; do
		\module unload ${target};
    done;
    for target in "${normal[@]}" ; do
		\module load ${target};
    done}
set-function	__conda_hashr {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash;
    else
		if [ -n "${POSH_VERSION:+x}" ]; then
			:;
		else
			\hash -r;
		fi;
    fi;
    __rehash_modules}
set-function	__conda_reactivate {
    \local ask_conda;
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return;
    \eval "$ask_conda";
    __conda_hashr}
set-function	conda {
    \local cmd="${1-__missing__}";
    case "$cmd" in
        activate | deactivate)
            __conda_activate "$@"
        ;;
        install | update | upgrade | remove | uninstall)
            __conda_exe "$@" || \return;
            __conda_reactivate
        ;;
        *)
            __conda_exe "$@"
        ;;
    esac}

# set environmental variables
setenv _CE_CONDA     {}
setenv _CE_M     {}
setenv CONDA_EXE     $path/bin/conda
setenv CONDA_PYTHON_EXE     $path/bin/python
setenv CONDA_SHLVL     0
